version: "3.8"
services:

  sql-client:
    build: ./flink-stack-img
    container_name: 'sql-client'
    command: 
      - /bin/sh
      - -c
      - |
        bin/sql-client.sh
        #sleep infinity
    environment:
      - AWS_REGION=${AWS_REGION}
      - AWS_ACCESS_KEY_ID=${AWS_ACCESS_KEY_ID}
      - AWS_SECRET_ACCESS_KEY=${AWS_SECRET_ACCESS_KEY}
      - |
        FLINK_PROPERTIES=
        jobmanager.rpc.address: jobmanager
        rest.address: jobmanager     

    volumes:
      - ./data/:/data
      - ./jars:/jars
      - ./host:/host

  jobmanager:
    container_name: 'jobmanager'
    build: ./flink-stack-img
    ports:
      - "8081:8081"
      - "6123:6123"
    command: 
      - /bin/sh
      - -c
      - |
        mkdir -p /data/rocksdb/checkpoint
        mkdir -p /data/rocksdb/data
        mkdir -p /data/recovery
        /docker-entrypoint.sh jobmanager
    environment:
      - AWS_REGION=${AWS_REGION}
      - AWS_ACCESS_KEY_ID=${AWS_ACCESS_KEY_ID}
      - AWS_SECRET_ACCESS_KEY=${AWS_SECRET_ACCESS_KEY}
      - |
        FLINK_PROPERTIES=
        jobmanager.rpc.address: jobmanager
        state.backend: rocksdb
        state.backend.rocksdb.timer-service.factory: ROCKSDB
        state.checkpoints.dir: file:///data/rocksdb/checkpoint
        state.backend.rocksdb.localdir: file:///data/rocksdb/data
        state.backend.incremental: true
        high-availability.type: zookeeper
        high-availability.zookeeper.quorum: zk:2181
        high-availability.zookeeper.path.root: /flink
        high-availability.cluster-id: /cluster_one
        high-availability.storageDir: file:///data/recovery      
    volumes:
      - ./jars:/jars
      - ./host:/host
      - ./data/:/data

  taskmanager:
    build: ./flink-stack-img
    depends_on:
      - jobmanager
    command: 
      - /bin/sh
      - -c
      - |
        /docker-entrypoint.sh taskmanager
    scale: 1
    environment:
      - AWS_REGION=${AWS_REGION}
      - AWS_ACCESS_KEY_ID=${AWS_ACCESS_KEY_ID}
      - AWS_SECRET_ACCESS_KEY=${AWS_SECRET_ACCESS_KEY}
      - |
        FLINK_PROPERTIES=
        jobmanager.rpc.address: jobmanager
        taskmanager.numberOfTaskSlots: 100
        high-availability.type: zookeeper
        high-availability.zookeeper.quorum: zk:2181
        high-availability.zookeeper.path.root: /flink
        high-availability.cluster-id: /cluster_one
        high-availability.storageDir: file:///data/recovery      
    volumes:
      - ./jars:/jars
      - ./host:/host
      - ./data/:/data

  zk:
    image: zookeeper:3.7.0
    restart: always
    container_name: zk
    hostname: zk
    ports:
      - "2181:2181"
      - "7001:7000"
    volumes:
      - zookeeper_log-volume:/logs
      - zookeeper_data-volume:/data
      - zookeeper_datalog-volume:/datalog
    ulimits:
      nofile:
        soft: 65536
        hard: 65536
    deploy:
      placement:
        constraints: 
          - "node.role == manager"
    environment:
      ZOO_MY_ID: 1
      ZOO_SERVERS: server.1=zk:2888:3888;2181 
      ZOO_4LW_COMMANDS_WHITELIST: mntr, conf, ruok

  minio:
    image: minio/minio
    container_name: minio
    environment:
      - MINIO_ROOT_USER=${AWS_ACCESS_KEY_ID}
      - MINIO_ROOT_PASSWORD=${AWS_SECRET_ACCESS_KEY}
    ports:
      - 9001:9001
      - 9000:9000
    command: ["server", "/data", "--console-address", ":9001"]
    volumes: 
      - minio-data-volume:/data

  mc:
    depends_on:
      - minio
    image: minio/mc
    container_name: mc
    entrypoint: >
      /bin/sh -c "
      until (/usr/bin/mc config host add minio http://minio:9000 ${AWS_ACCESS_KEY_ID} ${AWS_SECRET_ACCESS_KEY}) do echo '...waiting...' && sleep 1; done;
      /usr/bin/mc rm -r --force minio/warehouse;
      /usr/bin/mc mb minio/warehouse;
      tail -f /dev/null
      " 

#  catalog:
#    container_name: catalog
#    image: postgres
#    environment:
#      - POSTGRES_USER=dba
#      - POSTGRES_PASSWORD=rules
#    ports:
#      - 5435:5432
#    volumes: 
#      - catalog-data-volume:/var/lib/postgresql/data

# Without a network explicitly defined, you hit this Hive/Thrift error
# java.net.URISyntaxException Illegal character in hostname
# https://github.com/TrivadisPF/platys-modern-data-platform/issues/231
networks:
  default:
     name: flink-stack

volumes:
  zookeeper_log-volume:
  zookeeper_data-volume:
  zookeeper_datalog-volume:
#  catalog-data-volume:
  minio-data-volume:
